name: Deploy Feelink

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2

jobs:
  build_and_deploy_frontend:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install & Build
        working-directory: feelink/frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.API_URL }}
        run: |
          npm ci
          npm run build
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Sync to S3
        run: aws s3 sync feelink/frontend/out s3://${{ vars.S3_BUCKET }} --delete
      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  build_and_deploy_backend:
    runs-on: ubuntu-latest
    needs: build_and_deploy_frontend
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install backend deps
        working-directory: feelink/backend
        run: npm ci
      - name: Install SAM CLI
        run: |
          pipx install aws-sam-cli
          sam --version
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - name: SAM build
        working-directory: feelink/backend
        run: sam build
      - name: SAM deploy
        working-directory: feelink/backend
        run: |
          sam deploy \
            --stack-name feelink-stack-ci \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_REGION }}