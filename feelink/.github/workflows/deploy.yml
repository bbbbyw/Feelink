name: Deploy Feelink

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  # Set these in Repo Settings â†’ Variables (not Secrets)
  # S3_BUCKET: your-private-s3-bucket-for-frontend (e.g., feelink-frontend-byw-20250918)
  # CLOUDFRONT_DISTRIBUTION_ID: e.g., E3XXXXXXXXXXXXX
  # API_URL: e.g., https://xxxx.execute-api.ap-southeast-2.amazonaws.com
  # AWS_ROLE_ARN: arn:aws:iam::<account-id>:role/<GitHubOIDCDeployRole>

jobs:
  build_and_deploy_frontend:
    name: Frontend build & deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build (Next.js static export)
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ vars.API_URL }}
        run: |
          npm ci
          npm run build

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync to S3
        run: |
          aws s3 sync frontend/out s3://${{ vars.S3_BUCKET }} --delete

      - name: CloudFront invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  build_and_deploy_backend:
    name: Backend (SAM) deploy
    runs-on: ubuntu-latest
    needs: build_and_deploy_frontend
    permissions:
      id-token: write   # for OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Install SAM CLI
        run: |
          pipx install aws-sam-cli
          echo "SAM version:" && sam --version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM build
        working-directory: backend
        run: sam build

      - name: SAM deploy
        working-directory: backend
        run: |
          sam deploy \
            --stack-name feelink-stack-ci \
            --no-confirm-changeset \
            --capabilities CAPABILITY_IAM \
            --region $AWS_REGION 